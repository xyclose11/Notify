@model NoteApp.Models.ViewModels.Notes.NoteEditViewModel

<div class="col-2 border border-secondary-subtle rounded-3 border-1" id="filterTagContainer">
    <form id="editNoteForm" action="/Note/Edit" method="post"></form>

    <div class="row border border-1 m-1 rounded-3 border-secondary-subtle">
        <h3>Actions</h3>
    </div>
    <div class="row m-1 rounded-3">
        <!-- Displays the categories -->
        <div class="dropdown-align-right p-0 d-block mx-auto">
            <div class="form-floating m-1 p-0">
                <select class="form-select" form="editNoteForm" aria-label="Category Selector" id="categoryEditDropdown">
                    <option value=""></option>
                    @foreach (var cat in Model.Categories)
                    {
                        @if (Model.Note.CategoryId == cat.CategoryId)
                        {
                            <option value="@cat.CategoryId" selected>@cat.Name</option>
                        }
                        else
                        {
                            <option value="@cat.CategoryId">@cat.Name</option>
                        }
                    }
                </select>
                <label for="categoryEditDropdown">Category</label>
            </div>
        </div>
    </div>

    <div class="row border border-1 m-1 rounded-3 border-secondary-subtle">
        <p>Groups!</p>
    </div>

    <!-- Tags -->
    <div class="row border border-1 m-1 rounded-3 border-secondary-subtle">
        <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTagAction" aria-expanded="True" aria-controls="collapseTagAction">
            Tags
        </button>
        <div id="collapseTagAction" class="collapse">
            <div class="p-1 justify-content-evenly">
                <div id="tagActionCBList" class="text-start">

                    <!-- Only load the first 15 tags -->
                    @{ var displayedTags = Model.Tags.Take(15); }
                    <!-- Displays tags -->
                    @foreach (var tag in displayedTags)
                    {
                        <div class="form-check form-check-inline text-start">

                            @if (Model.AppliedTags.Contains(tag))
                            {
                                <input class="form-check-input" type="checkbox" name="tagACheckbox" id="tagACheckbox+@tag.Id" value="@tag.Id" checked="checked"/>
                            }
                            else
                            {
                                <input class="form-check-input" type="checkbox" name="tagACheckbox" id="tagACheckbox+@tag.Id" value="@tag.Id"/>
                            }
                        <label class="form-check-label" for="#tagActionCB+@tag.Id">@tag.Name</label>
                        </div>

                    }
                </div>

                <div class="btn-group btn-group-sm">
                    <button type="button" class="btn btn-primary" id="tagActionClearBtn">
                        Clear
                    </button>
                    <button type="button" class="btn btn-secondary" id="tagLoadMoreBtn">
                        More Tags?
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row border border-1 m-1 rounded-3 border-secondary-subtle">
        <input id="isPublicCheckboxEditNote" class="form-check-input" type="checkbox"/>
        <label for="#isPublicCheckboxEditNote" class="form-floating form-check-label">Is public?</label>
    </div>

    <!-- Save/Cancel Btns -->
    <div class="btn btn-group-sm">
        <button class="btn btn-secondary" id="editActionCancel" type="button">
            Cancel
        </button>
        <button class="btn btn-primary" id="editActionSubmit" type="submit">
            Apply
        </button>
    </div>

</div>  